/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use TestNG framework, also requires calling test.useTestNG() below
    testImplementation 'org.testng:testng:7.5'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    implementation (group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59')
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.3.1'
	implementation 'org.apache.logging.log4j:log4j-core:2.14.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.14.1'
    implementation group: 'com.opencsv', name: 'opencsv', version: '5.7.1'
    implementation group: 'com.jayway.jsonpath', name: 'json-path', version: '2.8.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    implementation group: 'net.minidev', name: 'json-smart-mini', version: '1.0.6.3'
    
}

/*test {
    useTestNG()
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}*/

task fatJar(type: Jar) {
 duplicatesStrategy = DuplicatesStrategy.EXCLUDE
 manifest {
        attributes 'Main-Class': 'org.testng.TestNG'
    }
    from(configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }) {
		// remove all signature files
		exclude "META-INF/*.SF"
		exclude "META-INF/*.DSA"
		exclude "META-INF/*.RSA"
	} with jar
}

